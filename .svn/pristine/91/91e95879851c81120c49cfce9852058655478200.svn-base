using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Net.Sockets;
using System.Net;
using Newtonsoft.Json;

namespace BSApp_AmpelCommander
{
    public partial class frm_main : Form
    {
        AmpelVars vars = new AmpelVars();

        public frm_main()
        {
            InitializeComponent();
            bgw_sendData.RunWorkerAsync();
            this.BackColor = Color.FromArgb(66, 66, 66);
            lbl_title.ForeColor = Color.FromArgb(255, 235, 59);
            pb_yLine.BackColor = Color.FromArgb(255, 235, 59);
            setAllFont(this.Controls);
            btn_dispAmp.BackColor = Color.FromArgb(244, 67, 54);
            btn_start.BackColor = Color.FromArgb(76, 175, 80);
            btn_halt.BackColor = Color.FromArgb(255, 235, 59);
            btn_stop.BackColor = Color.FromArgb(244, 67, 54);
        }

        private void bgw_sendData_DoWork(object sender, DoWorkEventArgs e)
        {
            /*var Client = new UdpClient(15000);
            
            var ServerEp = new IPEndPoint(IPAddress.Any, 15000);

            while (true)
            {
                var RequestData = Encoding.ASCII.GetBytes(JsonConvert.SerializeObject(vars));
                Client.EnableBroadcast = true;
                Client.Send(RequestData, RequestData.Length, new IPEndPoint(IPAddress.Broadcast, 15000));

                if (bgw_sendData.CancellationPending)
                {
                    Client.Close();
                    break;
                }
            }*/
            
        }

        private void frm_main_FormClosing(object sender, FormClosingEventArgs e)
        {
            bgw_sendData.CancelAsync();
        }

        private void frm_main_ResizeEnd(object sender, EventArgs e)
        {
            setAllFont(this.Controls);
        }

        private void setAllFont(Control.ControlCollection conts)
        {
            Graphics g = this.CreateGraphics();

            foreach (Control con in conts)
            {
                if (con is Button || con is Label)
                {
                    float sizeX = 0;
                    float sizeY = 0;
                    int fontSize = 1;
                    //LBL Time
                    do
                    {
                        fontSize++;
                        con.Font = new Font(con.Font.FontFamily, fontSize);
                        SizeF stringSize = new SizeF();
                        stringSize = g.MeasureString(con.Text, con.Font);
                        sizeX = stringSize.Width;
                        sizeY = stringSize.Height;
                    }
                    while (sizeX < con.Width - (con.Width * 0.08) && sizeY < con.Height - (con.Height * 0.08));
                }
                else if (con.HasChildren)
                {
                    setAllFont(con.Controls);
                }
            }
        }

        private void lbl_title_Click(object sender, EventArgs e)
        {
            setAllFont(this.Controls);
        }
    }
}
